// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  description String
  content     String
  tags        String[] @default([])

  coverImage  String?
  published   Boolean   @default(false)
  publishedAt DateTime?

  readingTime Int @default(0)
  views       Int @default(0)
  likes       Int @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // üîó –ê–≤—Ç–æ—Ä —Å—Ç–∞—Ç—å–∏
  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  // üîó –ö–∞—Ç–µ–≥–æ—Ä–∏—è
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  // üîó –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
  comments Comment[]
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String
  lastName  String?

  avatar    String?
  createdAt DateTime @default(now())

  // üîó –°–≤—è–∑–∏
  articles Article[]
  comments Comment[]
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  slug     String    @unique
  articles Article[]
}

model Comment {
  id      String @id @default(uuid())
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üîó –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  // üîó –°–≤—è–∑—å —Å —Å—Ç–∞—Ç—å—ë–π
  article   Article @relation(fields: [articleId], references: [id])
  articleId String
}
